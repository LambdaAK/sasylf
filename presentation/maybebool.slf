package presentation

module maybebool provides

terminals T F None Some

syntax b ::= T | F

judgment lor: b \/ b = b

  -------- lor-1
  T \/ b = T

  -------- lor-2
  F \/ b = b

theorem lor-comm:
  forall d: b1 \/ b2 = b3
  exists b2 \/ b1 = b3
  proof by unproved
end theorem

syntax m ::= None | Some b

judgment lifted-lor: m \/ m = m

  ----------------- lifted-lor-none-1
  None \/ m = None

  ----------------- lifted-lor-none-2
  m \/ None = None

  b1 \/ b2 = b3
  ----------------- lifted-lor-some
  Some b1 \/ Some b2 = Some b3


theorem lifted-lor-comm:
  forall d: m1 \/ m2 = m3
  exists m2 \/ m1 = m3
  proof by case analysis on d:
    case rule
      --------------- lifted-lor-none-1
      _: None \/ m2 = None
    is
      proof by rule lifted-lor-none-2
    end case

    case rule
      --------------- lifted-lor-none-2
      _: m1 \/ None = None
    is
      proof by rule lifted-lor-none-1
    end case

    case rule
      d1: b0 \/ b1 = b2
      --------------- lifted-lor-some
      _: (Some b0) \/ (Some b1) = (Some b2)
    is
      d2: b1 \/ b0 = b2 by theorem lor-comm on d1
      d3: Some b1 \/ Some b0 = Some b2 by rule lifted-lor-some on d2
      proof by d3
    end case
  end case analysis
end theorem