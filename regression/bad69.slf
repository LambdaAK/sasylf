package regression;

terminals λ value S unit

syntax
  t ::= x
     | λ x • t[x]
     | t t
     | unit
     
  Γ ::= *
     | Γ, x

  n ::= 0
     | S n

judgment bound: Γ ⊢ t
assumes Γ

  -------- B-Var
  Γ, x ⊢ x

  Γ ⊢ t1
  Γ ⊢ t2
  --------- B-App
  Γ ⊢ t1 t2
  
  Γ, x ⊢ t[x]
  -------------- B-Abs
  Γ ⊢ λ x • t[x]
  
  -------- B-Unit
  Γ ⊢ unit
  
judgment height: #t = n

  --------- H-Unit
  #unit = 0
  
  #t1 = n
  -------------- H-App
  #(t1 t2) = S n
  
  #t[λ x • t[x]] = n
  ------------------- H-Abs
  #(λ x • t[x]) = S n
  

theorem bound-implies-height:
    forall b: * ⊢ t
    exists #t = n.
    proof by induction on b:
        case rule
            d1: * ⊢ t0
            _: * ⊢ t1
            --------------- B-App
            _: * ⊢ (t0 t1)
        is
            h1: #t0 = n0 by induction hypothesis on d1
            proof by rule H-App on h1
        end case

        case rule
            d1: *, x ⊢ t0[x]
            -------------------- B-Abs
            _: * ⊢ (λ x • t0[x])
        is
            d1': * ⊢ t0[t] by substitution on d1, b
            h1: #t0[t] = n0 by induction hypothesis on d1' //! bad induction
            proof by rule H-Abs on h1
        end case

        case rule
            -------------- B-Unit
            _: * ⊢ unit
        is
            proof by induction hypothesis on b //! infinite recursion
        end case

    end induction
end theorem

lemma id-has-no-height:
    forall h: #(λ x • x) = n
    exists contradiction.
    proof by induction on h:
        case rule
            h1: # (λ x • x) = n0
            ------------------------- H-Abs
            _: # (λ x • x) = (S n0)
        is
            proof by induction hypothesis on h1
        end case
    end induction
end lemma

theorem impossible:
    exists contradiction.
    b0: *, x ⊢ x by rule B-Var
    b1: * ⊢ λ x • x by rule B-Abs on b0
    h1: #(λ x • x) = n by theorem bound-implies-height on b1
    proof by lemma id-has-no-height on h1
end theorem
