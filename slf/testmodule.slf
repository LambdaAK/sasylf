package slf

module testmodule

provides

terminals S

syntax

  n ::= 0 | S n

  1 := S 0
  2 := S 1

judgment plus-nat: n + n = n

  --------- plus-zero
  0 + n = n

  n1 + n2 = n3
  ---------------- plus-succ
  S n1 + n2 = S n3

judgment minus-nat: n - n = n

  --------- minus-zero
  n - 0 = n

  n1 - n2 = n3
  --------- minus-succ
  S n1 - S n2 = n3

judgment eq-nat: n = n

  -------- eq-nat
  n = n

judgment leq-nat: n <= n

  -------- leq-zero
  0 <= n

  n1 <= n2
  ------------ leq-succ 
  S n1 <= S n2


theorem right-add-zero:
  forall n
  exists n + 0 = n
  proof by induction on n:
    case 0 is
      proof by rule plus-zero
    end case

    case S n0 is
      ih: n0 + 0 = n0 by induction hypothesis on n0
      proof by rule plus-succ on ih
    end case

  end induction
end theorem

theorem commutative:
  forall _: n1 + n2 = n3
  exists n2 + n1 = n3
  proof by unproved
end theorem

theorem associative:
  forall _: n1 + n2 = n3
  forall _: n3 + n4 = n5
  forall _: n4 + n5 = n6
  exists n6 + n1 = n5
  proof by unproved
end theorem