  package tests.six

module foldablebt

requires

abstract syntax id
abstract syntax nonid
syntax e ::= id | nonid
abstract judgment combine: e + e = e

provides

terminals Leaf Node

syntax bt ::= Leaf | Node bt e bt

judgment fold: bt --> e

  --------------- fold-leaf
  Leaf --> id

theorem fold-leaf-theorem:
  exists Leaf --> id
  proof by rule fold-leaf
end theorem